# Generated by Django 5.1.6 on 2025-03-05 02:30

import django.db.models.deletion
from django.db import migrations, models


def create_initials(apps, schema_editor):
    DatabaseDriver = apps.get_model('app_bot', 'DatabaseDriver')
    DatabaseDriver.objects.bulk_create([
        DatabaseDriver(description="mysql", driver="mysql+pymysql"),
        DatabaseDriver(description="postgresql", driver="postgresql+psycopg2"),
        DatabaseDriver(description="sqlserver", driver="mssql+pyodbc"),
    ])

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(db_column='idcliente', primary_key=True, serialize=False)),
                ('business_name', models.CharField(db_column='razonsocial', max_length=200)),
                ('subscribed_date', models.DateField(db_column='fechaalta')),
                ('unsubscribed_date', models.DateField(blank=True, db_column='fechabaja', null=True)),
                ('telegram_api_key_test', models.CharField(db_column='apikeytelegramprueba', max_length=200)),
                ('telegram_api_key_prod', models.CharField(db_column='apikeytelegramproduccion', max_length=200)),
                ('openai_api_key', models.CharField(db_column='apikeyopenai', max_length=200)),
                ('chromadb_test', models.CharField(db_column='chromadbprueba', max_length=200)),
                ('chromadb_prod', models.CharField(db_column='chromadbproduccion', max_length=200)),
                ('bot_username_test', models.CharField(db_column='usernamebotprueba', max_length=200)),
                ('bot_username_prod', models.CharField(db_column='usernamebotproduccion', max_length=200)),
                ('documents_folder', models.CharField(db_column='carpetadocumentos', max_length=200)),
                ('extra_documents_folder', models.CharField(blank=True, db_column='carpeta_documentos', max_length=200, null=True)),
                ('chunk_size', models.IntegerField(db_column='chunksize')),
                ('chunk_overlap', models.IntegerField(db_column='chunkoverlap')),
                ('max_distance', models.FloatField(db_column='distanciamaxima')),
                ('prompt_test', models.CharField(db_column='promptprueba', max_length=1600)),
                ('prompt_prod', models.CharField(db_column='promptproduccion', max_length=1600)),
                ('bot_closed', models.IntegerField(db_column='bot_cerrado')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(db_column='IdToken', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='Descripcion', max_length=45)),
                ('token', models.CharField(db_column='Token', max_length=50)),
                ('test', models.SmallIntegerField(blank=True, db_column='Prueba', null=True)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.AutoField(db_column='idContexto', primary_key=True, serialize=False)),
                ('context', models.CharField(db_column='Contexto', max_length=45)),
                ('client', models.ForeignKey(blank=True, db_column='IdCliente', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contexts', to='app_bot.client')),
            ],
            options={
                'verbose_name': 'Context',
                'verbose_name_plural': 'Contexts',
                'db_table': 'Contextos',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(db_column='IdCurso', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='DsCurso', max_length=100, unique=True)),
                ('is_active', models.IntegerField(db_column='Vigente', default=1)),
                ('client', models.ForeignKey(blank=True, db_column='IdCliente', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='app_bot.client')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'db_table': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('question', models.TextField(blank=True, db_column='Pregunta', null=True)),
                ('answer', models.TextField(blank=True, db_column='Respuesta', null=True)),
                ('last_name', models.CharField(blank=True, db_column='Apellido', max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, db_column='Nombre', max_length=100, null=True)),
                ('context', models.TextField(blank=True, db_column='Contexto', null=True)),
                ('test', models.IntegerField(db_column='Prueba')),
                ('source', models.CharField(blank=True, db_column='Source', max_length=200, null=True)),
                ('date', models.DateField(auto_now_add=True, db_column='Fecha')),
                ('time', models.TimeField(auto_now_add=True, db_column='Hora')),
                ('client', models.ForeignKey(db_column='IdCliente', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='app_bot.client')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
                'db_table': 'Log',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(db_column='idPregunta', primary_key=True, serialize=False)),
                ('chat_id', models.BigIntegerField(blank=True, db_column='ChatId', null=True)),
                ('question', models.TextField(db_column='Pregunta')),
                ('date', models.DateField(auto_now_add=True, db_column='Fecha')),
                ('time', models.TimeField(auto_now_add=True, db_column='Hora')),
                ('client', models.ForeignKey(blank=True, db_column='IdCliente', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='app_bot.client')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'db_table': 'Preguntas',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(db_column='IdRespuesta', primary_key=True, serialize=False)),
                ('chat_id', models.BigIntegerField(blank=True, db_column='ChatId', null=True)),
                ('answer', models.TextField(blank=True, db_column='Respuesta', null=True)),
                ('date', models.DateField(auto_now_add=True, db_column='Fecha')),
                ('time', models.TimeField(auto_now_add=True, db_column='Hora')),
                ('client', models.ForeignKey(blank=True, db_column='IdCliente', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='app_bot.client')),
                ('question', models.ForeignKey(blank=True, db_column='IdPregunta', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='app_bot.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'db_table': 'Respuestas',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.BigIntegerField(db_column='ChatId')),
                ('last_name', models.CharField(blank=True, db_column='Apellido', max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, db_column='Nombre', max_length=100, null=True)),
                ('validation', models.IntegerField(db_column='Validacion', default=0)),
                ('client', models.ForeignKey(db_column='IdCliente', on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='app_bot.client')),
                ('context', models.ForeignKey(blank=True, db_column='IdContexto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='app_bot.context')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'db_table': 'Sesiones',
                'unique_together': {('chat_id', 'client')},
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_id', models.IntegerField(db_column='IdTexto')),
                ('text', models.CharField(db_column='Texto', max_length=2048)),
                ('file', models.CharField(blank=True, db_column='Archivo', max_length=512, null=True)),
                ('html', models.IntegerField(blank=True, db_column='HTML', null=True)),
                ('client', models.ForeignKey(db_column='IdCliente', on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='app_bot.client')),
                ('context', models.ForeignKey(blank=True, db_column='IdContexto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='texts', to='app_bot.context')),
            ],
            options={
                'verbose_name': 'Text',
                'verbose_name_plural': 'Texts',
                'db_table': 'Textos',
                'unique_together': {('text_id', 'client')},
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.AutoField(db_column='IdSinonimo', primary_key=True, serialize=False)),
                ('synonym', models.CharField(db_column='Sinonimo', max_length=45)),
                ('client', models.ForeignKey(blank=True, db_column='IdCliente', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='synonyms', to='app_bot.client')),
                ('context', models.ForeignKey(blank=True, db_column='IdContexto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='synonyms', to='app_bot.context')),
                ('text', models.ForeignKey(db_column='IdTexto', on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='app_bot.text')),
            ],
            options={
                'verbose_name': 'Synonym',
                'verbose_name_plural': 'Synonyms',
                'db_table': 'Sinonimos',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='IdUsuario', primary_key=True, serialize=False)),
                ('mail', models.CharField(db_column='mail', max_length=200)),
                ('password', models.CharField(db_column='clave', max_length=50)),
                ('available_tokens', models.BigIntegerField(blank=True, db_column='TokensDisponibles', null=True)),
                ('asked_questions', models.IntegerField(blank=True, db_column='PreguntasRealizadas', null=True)),
                ('category', models.CharField(blank=True, db_column='Categoria', max_length=45, null=True)),
                ('is_teacher', models.SmallIntegerField(db_column='EsProfesor', default=0)),
                ('session', models.ForeignKey(blank=True, db_column='IdSesion', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='app_bot.session')),
                ('client', models.ForeignKey(db_column='IdCliente', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app_bot.client')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'usuarios',
            },
        ),
        migrations.CreateModel(
            name='TextCourseContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(db_column='IdCliente', on_delete=django.db.models.deletion.CASCADE, related_name='text_course_contexts', to='app_bot.client')),
                ('context', models.ForeignKey(db_column='IdContexto', on_delete=django.db.models.deletion.CASCADE, related_name='text_course_contexts', to='app_bot.context')),
                ('course', models.ForeignKey(db_column='IdCurso', on_delete=django.db.models.deletion.CASCADE, related_name='text_course_contexts', to='app_bot.course')),
                ('text', models.ForeignKey(db_column='IdTexto', on_delete=django.db.models.deletion.CASCADE, related_name='text_course_contexts', to='app_bot.text')),
            ],
            options={
                'verbose_name': 'TextCourseContext',
                'verbose_name_plural': "TextCourseContext's",
                'db_table': 'TextosCursoyContexto',
                'unique_together': {('client', 'context', 'course')},
            },
        ),
        migrations.CreateModel(
            name='DatabaseDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('driver', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Database Driver',
                'verbose_name_plural': 'Database Drivers',
            },
        ),
        migrations.RunPython(create_initials),
        migrations.CreateModel(
            name='ExternalDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('database', models.CharField(max_length=255)),
                ('driver', models.CharField(blank=True, max_length=100, null=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='external_db', to='app_bot.client')),
                ('db_driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_bot.databasedriver')),
            ],
            options={
                'verbose_name': 'External Database',
                'verbose_name_plural': 'External Databases',
            },
        ),
    ]
